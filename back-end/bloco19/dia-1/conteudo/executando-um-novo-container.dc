‚û°Ô∏è Utilize o comando docker container run <flags>? <imagem>:<tag> <argumentos>? 
para executar um container utilizando a imagem identificada pelo <imagem>:<tag>.

- O exemplo abaixo executa um container usando a imagem Docker alpine e a tag 3.14:

docker container run alpine:3.14 echo "Hello World"

Recapitulando üß†
Vamos entender passo-a-passo tudo o que aconteceu durante a execu√ß√£o do comando anterior:


1 - Pedimos para o Docker criar um novo container, 
baseado na imagem chamada alpine, usando a tag 3.14 
e passando os argumentos echo e "Hello World";

2 - O Docker verifica se j√° temos esta imagem, 
com esta tag, no disco da m√°quina;

3 - Se a imagem n√£o √© encontrada, o Docker imprime
na tela a mensagem Unable to find image 'alpine:3.14' 
locally e come√ßa a baixar a imagem do Docker Hub;
√ß
4 - Com a imagem e a tag presentes no disco da m√°quina, 
o Docker cria um processo isolado e utiliza a imagem 
Docker como o ‚Äúdisco‚Äù base para este processo;

5 - Como estamos subindo este container passando 
os argumentos echo e "Hello World", o comportamento
padr√£o da imagem alpine √© executar este comando. 
Por isso, n√≥s vemos a sa√≠da Hello World no terminal!

6 - Ao executar o comando docker ps -a, verificamos 
que o container foi criado, por√©m ele j√° terminou 
sua execu√ß√£o e ficou com o status Exited.


‚ö†Ô∏è Aten√ß√£o: veja que o Docker atribuiu um nome aleat√≥rio 
para o nosso container. O Docker segue a seguinte regra
para dar um nome a um novo container: <adjetivo>_<nome>.
Entretanto, podemos utilizar a flag --name <nome-da-sua-escolha> 
para dar um nome espec√≠fico ao container criado, em vez de 
obter um nome aleat√≥rio dado pelo Docker.

Veja um exemplo abaixo onde n√≥s utilizamos a flag para dar o 
nome meu-container para o novo container que desejamos executar:

docker container run --name xablauzinho alpine:3.14 echo "xablau"