// Método sort()
// Sintaxe:

db.colecao.find().sort({ "campo": "1 ou -1"})

/*
Quando existe a necessidade de ordenar os documentos por algum atributo, o 
método sort() se mostra muito útil. Usando um valor positivo (1) como valor 
do atributo, os documentos da consultas são ordenados de forma crescente ou 
alfabética (também ordena por campos com strings). Em complemento, usando um 
valor negativo (-1), os documentos de saída estarão em ordem decrescente ou contra alfabética.

Esse método pode ser combinado com o método find()
*/

db.example.find({}, { "value": 1, "name": 1 }).sort({ "value": -1, "name": 1 })

// O sort() só pode ser usado se tiver algum resultado de busca antes:

db.colecao.find().sort({ nomeDoAtributo: 1 }) // certo
db.colecao.sort({ nomeDoAtributo: 1 }) // errado

// Vamos ver um exemplo?

use("business") // bd que está sendo usado para os exercícios de fixação
db.example.insertMany([
    { "name": "Mandioquinha Frita", "price": 14 },
    { "name": "Litrão", "price": 8 },
    { "name": "Torresmo", "price": 16 }
])

use("business") 
db.example.find().sort({ "price": 1 })

use("business") 
db.example.find().sort({ "price": -1, "name" : 1 })