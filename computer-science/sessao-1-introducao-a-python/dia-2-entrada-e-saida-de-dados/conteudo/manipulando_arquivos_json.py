# JSON √© um formato textual muito utilizado para integra√ß√£o de sistemas. Ele √© baseado em um subconjunto de regras JavaScript, embora seja independente de linguagem.

# Por sua legibilidade e tamanho (√© bem leve), al√©m da facilidade de leitura e escrita por seres humanos e m√°quinas, vem sendo bastante utilizado na web e para troca de informa√ß√µes entre sistemas.

# Alguns exemplos de utiliza√ß√£o incluem comunica√ß√£o back-end e front-end, e comunica√ß√£o com sistemas externos (gateways de pagamento, por exemplo) ou internos (como um sistema de autentica√ß√£o).

# A linguagem Python j√° inclui um m√≥dulo para manipula√ß√£o desse tipo de arquivo e seu nome √© json.


# Seus principais m√©todos para manipula√ß√£o s√£o: load, loads, dump, dumps.

# üê≠ Para demonstrar como √© feita a manipula√ß√£o de arquivos JSON, vamos utilizar o arquivo pokemons.json que √© uma lista de pokemons com suas informa√ß√µes chave.
# link: https://lms-assets.betrybe.com/lms/pokemons.json

# üí° Para fazer o exemplo, coloque o arquivo pokemons.json no mesmo diret√≥rio em que estar√° o seu script. (arquivo pokemons.json)

import json

with open("pokemons.json") as file:
    # content = file.read()
    pokemons = json.load(file)['results']

grass_type_pokemons = [
    pokemon for pokemon in pokemons if "Grass" in pokemon["type"]
]

with open("grass_pokemons.json", "w") as file:
    json.dump(grass_type_pokemons, file)

print(pokemons[0])